<local:DataUserControl x:Class="UndertaleModTool.UndertaleSpriteEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UndertaleModTool"
             xmlns:undertale="clr-namespace:UndertaleModLib.Models;assembly=UndertaleModLib"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance undertale:UndertaleSprite}">
    <UserControl.Resources>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="SpriteType">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="undertale:UndertaleSprite+SpriteType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="SepMaskType">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="undertale:UndertaleSprite+SepMaskType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="AnimSpeedType">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="undertale:AnimSpeedType" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Name</TextBlock>
        <local:UndertaleStringReference Grid.Row="0" Grid.Column="1" Margin="3" ObjectReference="{Binding Name}"/>

        <TextBlock Grid.Row="2" Grid.Column="0" Margin="3">Size</TextBlock>
        <Grid Grid.Row="2" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Margin="3" Text="{Binding Width}"/>
            <TextBox Grid.Column="1" Margin="3" Text="{Binding Height}"/>
        </Grid>

        <TextBlock Grid.Row="3" Grid.Column="0" Margin="3">Margin Left/Right/Bottom/Top</TextBlock>
        <Grid Grid.Row="3" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Margin="3" Text="{Binding MarginLeft}"/>
            <TextBox Grid.Column="1" Margin="3" Text="{Binding MarginRight}"/>
            <TextBox Grid.Column="2" Margin="3" Text="{Binding MarginBottom}"/>
            <TextBox Grid.Column="3" Margin="3" Text="{Binding MarginTop}"/>
        </Grid>

        <TextBlock Grid.Row="4" Grid.Column="0" Margin="3">Transparent</TextBlock>
        <CheckBox Grid.Row="4" Grid.Column="1" Margin="3" IsChecked="{Binding Transparent}"/>
        
        <TextBlock Grid.Row="5" Grid.Column="0" Margin="3">Smooth</TextBlock>
        <CheckBox Grid.Row="5" Grid.Column="1" Margin="3" IsChecked="{Binding Smooth}"/>
        
        <TextBlock Grid.Row="6" Grid.Column="0" Margin="3">Preload</TextBlock>
        <CheckBox Grid.Row="6" Grid.Column="1" Margin="3" IsChecked="{Binding Preload}"/>

        <TextBlock Grid.Row="7" Grid.Column="0" Margin="3">Bounding box mode</TextBlock>
        <TextBox Grid.Row="7" Grid.Column="1" Margin="3" Text="{Binding BBoxMode}"/>

        <TextBlock Grid.Row="8" Grid.Column="0" Margin="3">SepMasks</TextBlock>
        <ComboBox ItemsSource="{Binding Source={StaticResource SepMaskType}}" SelectedItem="{Binding Path=SepMasks}"
                  Grid.Row="8" Grid.Column="1" Margin="3"/>

        <TextBlock Grid.Row="9" Grid.Column="0" Margin="3">Origin</TextBlock>
        <Grid Grid.Row="9" Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Margin="3" Text="{Binding OriginXWrapper}"/>
            <TextBox Grid.Column="1" Margin="3" Text="{Binding OriginYWrapper}"/>
        </Grid>

        <TextBlock Grid.Row="10" Grid.Column="0" Margin="3">Textures</TextBlock>
        <DataGrid Grid.Row="10" Grid.Column="1" Margin="3" ItemsSource="{Binding Textures, Mode=OneWay}" Name="TextureList" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF26A0DA"/>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <local:UndertaleObjectReference Margin="20,0,0,0" ObjectReference="{Binding Texture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ObjectType="{x:Type undertale:UndertaleTexturePageItem}" CanRemove="False"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Viewbox Grid.Row="11" Grid.Column="1" Stretch="Uniform" StretchDirection="DownOnly">
            <Border>
                <Border.Background>
                    <DrawingBrush Stretch="None" TileMode="Tile" Viewport="0,0,20,20" ViewportUnits="Absolute">
                        <DrawingBrush.Drawing>
                            <DrawingGroup>
                                <GeometryDrawing Geometry="M0,0 L20,0 20,20, 0,20Z" Brush="White"/>
                                <GeometryDrawing Geometry="M0,10 L20,10 20,20, 10,20 10,0 0,0Z" Brush="LightGray"/>
                            </DrawingGroup>
                        </DrawingBrush.Drawing>
                    </DrawingBrush>
                </Border.Background>
                <local:UndertaleTexturePageItemDisplay DataContext="{Binding SelectedItem.Texture, Mode=OneWay, ElementName=TextureList}" x:Name="TextureDisplay"/>
            </Border>
        </Viewbox>

        <Button Grid.Row="12" Grid.Column="1" Content="Export all frames (or Spine data if this is a Spine sprite)" Click="ExportAll_Click"/>

        <TextBlock Grid.Row="13" Grid.Column="0" Margin="3">Collision masks</TextBlock>
        <DataGrid Grid.Row="13" Grid.Column="1" Margin="3" ItemsSource="{Binding CollisionMasks, Mode=OneWay}" Name="MaskList" AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HorizontalGridLinesBrush="LightGray" VerticalGridLinesBrush="LightGray" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow" IsSynchronizedWithCurrentItem="True" AddingNewItem="MaskList_AddingNewItem">
            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FF26A0DA"/>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>
            <DataGrid.Columns>
                <DataGridTemplateColumn Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Margin="20,0,0,0" Text="(CollisionMask)"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <ContentControl Grid.Row="14" Grid.Column="1" Margin="3" DataContext="{Binding SelectedItem, Mode=OneWay, ElementName=MaskList}">
            <ContentControl.Template>
                <ControlTemplate>
                    <StackPanel Name="MaskEditor">
                        <Viewbox Stretch="None">
                            <Border BorderThickness="2" BorderBrush="Gray" Name="MaskBorder">
                                <Image Stretch="None" Name="MaskImage">
                                    <Image.Source>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <local:MaskImageConverer/>
                                            </MultiBinding.Converter>
                                            <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="DataContext.Width" Mode="OneWay"/>
                                            <Binding RelativeSource="{RelativeSource AncestorType=UserControl}" Path="DataContext.Height" Mode="OneWay"/>
                                            <Binding Path="Data" Mode="OneWay"/>
                                        </MultiBinding>
                                    </Image.Source>
                                </Image>
                            </Border>
                        </Viewbox>
                        <TextBlock Text="Invalid mask data!" Foreground="Red" Name="MaskIsInvalid" Visibility="Hidden"/>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Button Grid.Row="0" Grid.Column="0" Content="Import mask" Click="MaskImport_Click" Name="MaskImport"/>
                            <Button Grid.Row="0" Grid.Column="3" Content="Export mask" Click="MaskExport_Click" Name="MaskExport"/>
                        </Grid>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="MaskImage" Property="Source" Value="{x:Null}">
                            <Trigger.Setters>
                                <Setter TargetName="MaskBorder" Property="BorderBrush" Value="Red"/>
                                <Setter TargetName="MaskIsInvalid" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="MaskExport" Property="IsEnabled" Value="False"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="DataContext" Value="{x:Null}">
                            <Trigger.Setters>
                                <Setter TargetName="MaskEditor" Property="Visibility" Value="Hidden"/>
                            </Trigger.Setters>
                        </Trigger>
                        <Trigger Property="DataContext" Value="{x:Static CollectionView.NewItemPlaceholder}">
                            <Trigger.Setters>
                                <Setter TargetName="MaskEditor" Property="Visibility" Value="Hidden"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>

        <TextBlock Grid.Row="15" Grid.Column="0" Margin="3">Is special type?</TextBlock>
        <CheckBox Grid.Row="15" Grid.Column="1" Margin="3" IsChecked="{Binding IsSpecialType}"/>

        <Grid Grid.Row="16" Grid.ColumnSpan="2" Margin="0" Visibility="{Binding Path=IsSpecialType, Mode=OneWay, Converter={StaticResource BoolToVis}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Version</TextBlock>
            <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding SVersion}"/>

            <TextBlock Grid.Row="1" Grid.Column="0" Margin="3">Type</TextBlock>
            <ComboBox ItemsSource="{Binding Source={StaticResource SpriteType}}" SelectedItem="{Binding Path=SSpriteType}"
                  Grid.Row="1" Grid.Column="1" Margin="3"/>

            <Grid Grid.Row="2" Grid.ColumnSpan="2" Margin="0" Visibility="{Binding DataContext.IsGMS2, Mode=OneTime, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Playback speed</TextBlock>
                <TextBox Grid.Row="0" Grid.Column="1" Margin="3" Text="{Binding GMS2PlaybackSpeed}"/>

                <TextBlock Grid.Row="1" Grid.Column="0" Margin="3">Playback speed type</TextBlock>
                <ComboBox ItemsSource="{Binding Source={StaticResource AnimSpeedType}}" SelectedItem="{Binding Path=GMS2PlaybackSpeedType}"
                    Grid.Row="1" Grid.Column="1" Margin="3"/>
            </Grid>
        </Grid>
    </Grid>
</local:DataUserControl>
