<local:DataUserControl x:Class="UndertaleModTool.UndertaleTextureGroupInfoEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UndertaleModTool"
             xmlns:undertale="clr-namespace:UndertaleModLib.Models;assembly=UndertaleModLib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" d:DataContext="{d:DesignInstance undertale:UndertaleTextureGroupInfo}">
  
  <UserControl.Resources>
    <local:NullToVisibilityConverter x:Key="NullToVisibilityConverter" local:nullValue="Visible" local:notNullValue="Collapsed"/>
    <local:NullToVisibilityConverter x:Key="NotNullToVisibilityConverter" local:nullValue="Collapsed" local:notNullValue="Visible"/>
    <local:BooleanToVisibilityConverter x:Key="BooleanTrueToVisibilityConverter" local:trueValue="Visible" local:falseValue="Collapsed"/>
    <local:BooleanToVisibilityConverter x:Key="BooleanFalseToVisibilityConverter" local:trueValue="Collapsed" local:falseValue="Visible"/>
    <local:IsGM2023Converter x:Key="IsGM2023Converter"/>
  </UserControl.Resources>

  <StackPanel>
        <StackPanel>
            <TextBlock Text="Texture Group" FontWeight="Bold"/>
            <Separator/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" Margin="3">Group Name</TextBlock>
                <local:UndertaleStringReference Grid.Row="0" Grid.Column="1" Margin="3" ObjectReference="{Binding Name}"/>


              <!--Texture Page List-->
              <TextBlock Grid.Row="1" Grid.Column="0" Margin="3">Texture Pages</TextBlock>
              <Expander Grid.Row="1" Grid.Column="1" Margin="3" Name="TextureListExpander" Header="List">
                <DataGrid ItemsSource="{Binding TexturePages}" MaxHeight="370" x:Name="TextureListGrid"
                                    AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow"
                                    ScrollViewer.CanContentScroll="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling">
                  <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </DataGrid.Resources>
                  <DataGrid.Columns>
                    <DataGridTemplateColumn Width="*">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <local:UndertaleObjectReference Margin="20,0,0,0" ObjectReference="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ObjectType="{x:Type undertale:UndertaleEmbeddedTexture}" CanRemove="False"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Expander>

              <!--Sprite List-->
              <TextBlock Grid.Row="2" Grid.Column="0" Margin="3">Sprites</TextBlock>
              <Expander Grid.Row="2" Grid.Column="1" Margin="3" Name="SpriteListExpander" Header="List">
                <DataGrid ItemsSource="{Binding Sprites}" MaxHeight="370" x:Name="SpriteListGrid"
                                    AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow"
                                    ScrollViewer.CanContentScroll="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling">
                  <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </DataGrid.Resources>
                  <DataGrid.Columns>
                    <DataGridTemplateColumn Width="*">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <local:UndertaleObjectReference Margin="20,0,0,0" ObjectReference="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ObjectType="{x:Type undertale:UndertaleSprite}" CanRemove="False"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Expander>

              <!--Spine Sprite List-->
              <TextBlock Grid.Row="3" Grid.Column="0" Margin="3">Spine Sprites</TextBlock>
              <Expander Grid.Row="3" Grid.Column="1" Margin="3" Name="SpineSprListExpander" Header="List">
                <DataGrid ItemsSource="{Binding SpineSprites}" MaxHeight="370" x:Name="SpineSprListGrid"
                                    AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow"
                                    ScrollViewer.CanContentScroll="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling">
                  <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </DataGrid.Resources>
                  <DataGrid.Columns>
                    <DataGridTemplateColumn Width="*">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <local:UndertaleObjectReference Margin="20,0,0,0" ObjectReference="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ObjectType="{x:Type undertale:UndertaleSprite}" CanRemove="False"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Expander>

              <!--Font List-->
              <TextBlock Grid.Row="4" Grid.Column="0" Margin="3">Fonts</TextBlock>
              <Expander Grid.Row="4" Grid.Column="1" Margin="3" Name="FontListExpander" Header="List">
                <DataGrid ItemsSource="{Binding Fonts}" MaxHeight="370" x:Name="FontListGrid"
                                    AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow"
                                    ScrollViewer.CanContentScroll="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling">
                  <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </DataGrid.Resources>
                  <DataGrid.Columns>
                    <DataGridTemplateColumn Width="*">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <local:UndertaleObjectReference Margin="20,0,0,0" ObjectReference="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ObjectType="{x:Type undertale:UndertaleFont}" CanRemove="False"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Expander>

              <!--Tileset List-->
              <TextBlock Grid.Row="5" Grid.Column="0" Margin="3">Tilesets</TextBlock>
              <Expander Grid.Row="5" Grid.Column="1" Margin="3" Name="TilesetListExpander" Header="List">
                <DataGrid ItemsSource="{Binding Tilesets}" MaxHeight="370" x:Name="TilesetListGrid"
                                    AutoGenerateColumns="False" CanUserAddRows="True" CanUserDeleteRows="True" HeadersVisibility="None" SelectionMode="Single" SelectionUnit="FullRow"
                                    ScrollViewer.CanContentScroll="True"
                                    VirtualizingPanel.IsVirtualizing="True"
                                    VirtualizingPanel.VirtualizationMode="Recycling">
                  <DataGrid.Resources>
                    <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Value="{x:Static CollectionView.NewItemPlaceholder}">
                          <Setter Property="Template">
                            <Setter.Value>
                              <ControlTemplate>
                                <TextBlock Margin="5" TextAlignment="Center" FontStyle="Italic">Double click to add</TextBlock>
                              </ControlTemplate>
                            </Setter.Value>
                          </Setter>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </DataGrid.Resources>
                  <DataGrid.Columns>
                    <DataGridTemplateColumn Width="*">
                      <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                          <local:UndertaleObjectReference Margin="20,0,0,0" ObjectReference="{Binding Resource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ObjectType="{x:Type undertale:UndertaleBackground}" CanRemove="False"/>
                        </DataTemplate>
                      </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                  </DataGrid.Columns>
                </DataGrid>
              </Expander>
            </Grid>
        </StackPanel>
    </StackPanel>
    
    <!-- <Grid>
        <Border Margin="20" Background="LightPink" BorderBrush="Red" BorderThickness="3">
            <TextBlock TextWrapping="Wrap" Margin="3" Foreground="Red">TODO: Implement the Texture Group Info editor</TextBlock>
        </Border>
    </Grid> -->
</local:DataUserControl>
