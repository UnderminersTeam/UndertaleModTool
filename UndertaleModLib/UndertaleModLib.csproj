<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <LangVersion>11</LangVersion>
    <OutputType>Library</OutputType>
    <!-- AssemblyInfo -->
    <AssemblyTitle>UndertaleModLib</AssemblyTitle>
    <ProductName>UndertaleModLib</ProductName>
    <Copyright>Copyright Â©  2018-2025, licensed under GPLv3</Copyright>
    <AssemblyVersion>0.7.0.0</AssemblyVersion>
    <FileVersion>0.7.0.0</FileVersion>
    <DebugType>embedded</DebugType>
    <Platforms>AnyCPU;x64</Platforms>
    <RuntimeIdentifiers>win-x64;win-x86</RuntimeIdentifiers>
    <NeutralLanguage>en</NeutralLanguage>
    <ResourceLanguages>en</ResourceLanguages>
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
    <!-- Suppress all missing XML comment warnings -->
    <NoWarn>1591</NoWarn>
  </PropertyGroup>
  <PropertyGroup>
    <StartupObject />
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <PackageReference Include="Fody" Version="6.9.2">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Magick.NET-Q8-AnyCPU" Version="14.6.0" />
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="PropertyChanged.Fody" Version="4.1.0" />
    <PackageReference Include="SharpZipLib" Version="1.4.2" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="GameSpecificData\Definitions\deltarune.json" />
    <None Remove="GameSpecificData\Definitions\gamemaker.json" />
    <None Remove="GameSpecificData\Definitions\undertale.json" />
    <None Remove="GameSpecificData\deltarune.json" />
    <None Remove="GameSpecificData\empty.json" />
    <None Remove="GameSpecificData\gamemaker.json" />
    <None Remove="GameSpecificData\README.txt" />
    <None Remove="GameSpecificData\undertale.json" />
    <None Remove="version.txt" />
  </ItemGroup>
  <ItemGroup>
    <None Remove="gitversion.txt" />
    <Content Include="GameSpecificData\README.txt">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Underanalyzer\deltarune.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Underanalyzer\template.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Underanalyzer\gamemaker.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Underanalyzer\undertale.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Definitions\deltarune.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Definitions\gamemaker.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="GameSpecificData\Definitions\undertale.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <EmbeddedResource Include="gitversion.txt" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\Underanalyzer\Underanalyzer\Underanalyzer.csproj" />
  </ItemGroup>
  <ItemGroup>
    <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
       <_Parameter1>UndertaleModLibTests</_Parameter1>
    </AssemblyAttribute>
  </ItemGroup>
  <!--A prebuild responsible for creating a git commit name and branch name -->
  <Target Name="PreBuild" BeforeTargets="PreBuildEvent">
    <!--Create the gitversion.txt file first, in case any of the later commands fail -->
    <Exec Command="echo &quot;&quot; &gt; &quot;$(ProjectDir)/gitversion.txt&quot;" IgnoreExitCode="true" />

    <!--If on Windows check if git is in PATH-->
    <Exec Condition="$([MSBuild]::IsOsPlatform('Windows'))" Command="where /q git" IgnoreExitCode="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <PropertyGroup>
      <!--Assign the location of git to GitPath. By default it's "git", if the above PATH checked failed, it'll get set to the git path in VS -->
      <GitPath>git</GitPath>
      <GitPath Condition="'$(ErrorCode)'=='1'">$(DevEnvDir)\CommonExtensions\Microsoft\TeamFoundation\Team Explorer\Git\cmd\git</GitPath>
    </PropertyGroup>
    <!-- Use GitPath and put the git commit name and branch name into gitversion.txt which is an embedded resource-->
    <Exec Command="( &quot;$(GitPath)&quot; describe --always --dirty &amp;&amp; &quot;$(GitPath)&quot; rev-parse --abbrev-ref HEAD ) &gt; &quot;$(ProjectDir)/gitversion.txt&quot;" IgnoreExitCode="true" />
  </Target>
</Project>